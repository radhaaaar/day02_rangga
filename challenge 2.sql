set search_path to oe,hr;
--1. buat table dan relasinya untuk table bank,users
--carts,cart_items& attribute tambahan di table
CREATE TABLE oe.bank ( 
bank_code Varchar(4) PRIMARY KEY, 
bank_name varchar(55)    
); 
 alter table oe.orders
 add column user_id integer,
 add constraint user_id_fk foreign key (user_id) references oe.users(user_id),
 add column bank_code varchar(4),
 add constraint bank_code_fk foreign key (bank_code) references oe.bank(bank_code),
 add column total_discount decimal(5,2),
 add column total_amount decimal(8,2),
 add column payment_type varchar(15),
 add column card_no varchar(25),
 add column transac_no varchar(25),
 add column transac_date timestamp,
 add column ref_no varchar(25);

 select * from oe.orders

create table oe.users(
user_id int primary key,
user_name varchar(30),
user_email varchar (80) unique,
user_password varchar(125),
user_handphone varchar(24) unique,
created_on TIMESTAMP default CURRENT_TIMESTAMP
);

create table oe.carts(
cart_id smallint primary key,
created_on TIMESTAMP default CURRENT_TIMESTAMP,
user_id int unique,
foreign key (user_id) references oe.users (user_id)
on update cascade on delete cascade
);
select u.user_name, c.cart_id from oe.users u
join oe.carts c on u.user_id = c.user_id


create table oe.cart_items(
cart_item_id smallint primary key,
product_id int unique,
quantity smallint,
created_on TIMESTAMP default CURRENT_TIMESTAMP,
cart_id integer not null,
foreign key (cart_id) references oe.carts (cart_id)
);
select * from oe.cart_items

--2 buat link antara table hr.locations dan table oe.orders,
-- dan update kolom laction_id ditable oe.orders.

alter table oe.cart_items
add constraint cart_product_id_fk foreign key (product_id) 
references oe.products(product_id)

alter table oe.orders
add column location_id int,
add constraint location_id_hr foreign key(location_id) 
references hr.locations(location_id) 

update oe.orders as cu
set location_id = (select location_id from oe.location_x loc
where loc.street_address=cu.ship_address and loc.postal_code=cu.ship_postal_code
and loc.city=cu.ship_city and loc.state_province=cu.ship_region and
loc.country_name=cu.ship_country
) where cu.location_id is null

select * from oe.orders where location_id is not null
select * from oe.location_x

--3 Pindahkan data employee dari schema oe.employees ke schema hr.employees. Data yang dipindahkan
--cukup mengikuti kolom yang ada di schema hr.employees.

insert into hr.employees (employee_id, first_name, last_name, email, hire_date, job_id, salary)
select employee_id, first_name, last_name, LOWER(first_name||  '.' || last_name || '@sqltutorial.com')
as email, hire_date, j.job_id,
0.00 as salary
from oe.employees
JOIN (
    SELECT job_id
    FROM hr.jobs
    ORDER BY RANDOM()
	limit 1
) j ON TRUE;
select * from hr.employees
--3 Buat relasi antara table hr.employees dengan table oe.orders
alter table oe.orders
add constraint employee_id foreign key(employee_id) 
references hr.employees(employee_id) 

--4 create table users di schema oe
--no1
--4 pindahkan data dari table oe.customer ke table users
-- buat relasi antara table oe.users dengan table oe.orders
CREATE EXTENSION IF NOT EXISTS pgcrypto;

alter table oe.users
alter column user_id add generated by default as identity

insert into oe.users (user_name,user_password,user_handphone) select contact_name as user_name, 
crypt(lower(oc.customer_id), gen_salt('bf', 12)),
phone as user_handphone from oe.customers oc

select * from oe.users

